---
- hosts: all
  name: install deepseek
  become: yes
  vars:
    python_packages:
      - python3
      - python3-venv
      - python3-pip
    system_packages:
      - git
      - curl
      - ffmpeg
      - libsm6
      - libxext6
    venv_path: /root/open-webui-venv
    service_name: open-webui
    user: root
    exec_command: "{{ venv_path }}/bin/open-webui serve --port 80"
    env_file: /etc/default/open-webui

  tasks:
    - name: apt update
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400

    - name: install pkgs
      apt:
        name: "{{ system_packages }}"
        state: present

    - name: install ollama
      raw: curl -fsSL https://ollama.com/install.sh | sh

    - name: enable and start ollama
      service:                                                                             
        name: ollama
        state: started
        enabled: true

    - name: run model
      shell: ollama run deepseek-r1:7b >/dev/null 2>&1 &
      async: 10
      poll: 0

    - name: Create a Python virtual environment
      command: python3 -m venv "{{ venv_path }}"
      args:
        creates: "{{ venv_path }}"

    - name: Install Open-WebUI inside the virtual environment
      command: "{{ venv_path }}/bin/pip install open-webui"

    - name: Create environment file for Open-WebUI
      copy:
        dest: "{{ env_file }}"
        content: |
          ENABLE_SIGNUP=yes
          AUTH_ALLOW_REGISTRATION=true
          WEBUI_AUTH_MODE=local
          NEXT_PUBLIC_AUTH_DISABLE_SIGNUP=false
          NEXT_PUBLIC_AUTH_DISABLE_LOGIN=false
      notify: Restart Open-WebUI

    - name: Create systemd service file for Open-WebUI
      copy:
        dest: "/etc/systemd/system/{{ service_name }}.service"
        content: |
          [Unit]
          Description=Open-WebUI Service
          After=network.target

          [Service]
          Type=simple
          EnvironmentFile={{ env_file }}
          ExecStart={{ exec_command }}
          WorkingDirectory={{ venv_path }}
          Restart=always
          User={{ user }}

          [Install]
          WantedBy=multi-user.target
      notify: Restart Open-WebUI

    - name: Reload systemd daemon
      command: systemctl daemon-reload

    - name: Enable and start Open-WebUI service
      systemd:
        name: "{{ service_name }}"
        enabled: yes
        state: started

  handlers:
    - name: Restart Open-WebUI
      systemd:
        name: "{{ service_name }}"
        state: restarted
